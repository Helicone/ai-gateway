name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use nightly rustfmt
      run: rustup override set nightly && rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt
    - name: Output rust version for educational purposes
      run: rustup --version
    - name: Format
      run: cargo +nightly fmt --check
  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Clippy
      run: cargo clippy
  test:
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
      PROXY__DATABASE__URL: "postgresql://postgres:postgres@localhost:5432/postgres"
    services:
      postgres:
        image: postgres:16.4-alpine
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 54322:5432

      minio:
        image: minio/minio
        ports:
          - "9000:9000" # MinIO API port
          - "9001:9001" # MinIO Console port
        environment:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        volumes:
          - minio_data:/data
        command: server /data --console-address ":9001"
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 10s
          retries: 5
          start_period: 5s # Give MinIO time to start up before checking

      minio-setup:
        image: minio/mc
        depends_on:
          minio:
            condition: service_healthy
        entrypoint: >
          /bin/sh -c "
          /usr/bin/mc alias set localminio http://minio:9000 minioadmin minioadmin;
          /usr/bin/mc mb --ignore-existing localminio/request-response-storage;
          exit 0;
          "

      redis:
        image: redis:6.2.6-alpine
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    # required for stubr test dependency
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
    - name: Test
      run: cargo test --tests --all-features
