name: NPM CLI Package CI (Simple & Reliable)

on:
  push:
    branches: ["main"]
    paths:
      - "npx/**"
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
  pull_request:
    branches: ["main"]
    paths:
      - "npx/**"
      - "crates/**"
      - "Cargo.toml" 
      - "Cargo.lock"

env:
  CARGO_TERM_COLOR: always

jobs:
  # Test the Node.js wrapper
  test-npm-package:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Rust binary (Linux native)
        run: cargo build --release

      - name: Prepare NPM package
        working-directory: npx
        run: |
          cp ../target/release/llm-proxy dist/helicone-router-linux
          chmod +x dist/helicone-router-linux

      - name: Run NPM tests
        working-directory: npx
        run: npm test

      - name: Test CLI execution
        working-directory: npx
        run: |
          node bin/index.js --help
          npm link
          helicone-router --help
          npm unlink -g helicone-router

  # Build on each platform NATIVELY (no cross-compilation)
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Linux binary
        run: cargo build --release

      - name: Upload Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: helicone-router-linux
          path: target/release/llm-proxy

  build-linux-musl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Install musl tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build Linux musl binary
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Upload Linux musl binary
        uses: actions/upload-artifact@v3
        with:
          name: helicone-router-linux-musl
          path: target/x86_64-unknown-linux-musl/release/llm-proxy

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build macOS binary
        run: cargo build --release

      - name: Upload macOS binary
        uses: actions/upload-artifact@v3
        with:
          name: helicone-router-macos
          path: target/release/llm-proxy

  # Test the complete package with all binaries
  validate-package:
    needs: [build-linux, build-linux-musl, build-macos]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Download all binaries
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Prepare complete package
        working-directory: npx
        run: |
          cp ../artifacts/helicone-router-linux/llm-proxy dist/helicone-router-linux
          cp ../artifacts/helicone-router-macos/llm-proxy dist/helicone-router-macos
          chmod +x dist/*
          echo "Package ready with binaries:"
          ls -lh dist/

      - name: Final validation
        working-directory: npx
        run: |
          npm test
          npm run publish:dry
          echo "âœ… Package validation complete!" 