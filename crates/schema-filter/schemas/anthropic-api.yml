openapi: 3.1.0
info:
  title: Anthropic API
  version: '89'
servers:
- url: https://api.anthropic.com
paths:
  /v1/messages:
    post:
      tags:
      - Messages
      summary: Create a Message
      description: |-
        Send a structured list of input messages with text and/or image content, and the model will generate the next message in the conversation.

        The Messages API can be used for either single queries or stateless multi-turn conversations.

        Learn more about the Messages API in our [user guide](/en/docs/initial-setup)
      operationId: messages_post
      parameters:
      - in: header
        name: anthropic-version
        description: |-
          The version of the Anthropic API you want to use.

          Read more about versioning and our version history [here](https://docs.anthropic.com/en/api/versioning).
        schema:
          title: Anthropic-Version
          description: |-
            The version of the Anthropic API you want to use.

            Read more about versioning and our version history [here](https://docs.anthropic.com/en/api/versioning).
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageParams'
        required: true
      responses:
        '200':
          description: Message object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        4XX:
          description: |-
            Error response.

            See our [errors documentation](https://docs.anthropic.com/en/api/errors) for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    APIError:
      title: APIError
      type: object
      properties:
        message:
          title: Message
          default: Internal server error
          type: string
        type:
          title: Type
          default: api_error
          type: string
          enum:
          - api_error
      required:
      - message
      - type
    AuthenticationError:
      title: AuthenticationError
      type: object
      properties:
        message:
          title: Message
          default: Authentication error
          type: string
        type:
          title: Type
          default: authentication_error
          type: string
          enum:
          - authentication_error
      required:
      - message
      - type
    Base64ImageSource:
      title: Base64ImageSource
      type: object
      properties:
        data:
          title: Data
          type: string
          format: byte
        media_type:
          title: Media Type
          type: string
          enum:
          - image/jpeg
          - image/png
          - image/gif
          - image/webp
        type:
          title: Type
          type: string
          enum:
          - base64
      required:
      - data
      - media_type
      - type
      additionalProperties: false
    Base64PDFSource:
      title: Base64PDFSource
      type: object
      properties:
        data:
          title: Data
          type: string
          format: byte
        media_type:
          title: Media Type
          type: string
          enum:
          - application/pdf
        type:
          title: Type
          type: string
          enum:
          - base64
      required:
      - data
      - media_type
      - type
      additionalProperties: false
    BashTool_20250124:
      title: BashTool_20250124
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        name:
          title: Name
          description: |-
            Name of the tool.

            This is how the tool will be called by the model and in `tool_use` blocks.
          type: string
          enum:
          - bash
        type:
          title: Type
          type: string
          enum:
          - bash_20250124
      required:
      - name
      - type
      additionalProperties: false
    BillingError:
      title: BillingError
      type: object
      properties:
        message:
          title: Message
          default: Billing error
          type: string
        type:
          title: Type
          default: billing_error
          type: string
          enum:
          - billing_error
      required:
      - message
      - type
    CacheControlEphemeral:
      title: CacheControlEphemeral
      type: object
      properties:
        type:
          title: Type
          type: string
          enum:
          - ephemeral
      required:
      - type
      additionalProperties: false
    ContentBlockSource:
      title: ContentBlockSource
      type: object
      properties:
        content:
          title: Content
          anyOf:
          - type: string
          - title: content_block_source_content
            type: array
            items:
              title: content_block_source_content_item
              discriminator:
                propertyName: type
                mapping:
                  image: '#/components/schemas/RequestImageBlock'
                  text: '#/components/schemas/RequestTextBlock'
              oneOf:
              - $ref: '#/components/schemas/RequestTextBlock'
              - $ref: '#/components/schemas/RequestImageBlock'
        type:
          title: Type
          type: string
          enum:
          - content
      required:
      - content
      - type
      additionalProperties: false
    CreateMessageParams:
      example:
        max_tokens: 1024
        messages:
        - content: Hello, world
          role: user
        model: claude-3-7-sonnet-20250219
      title: CreateMessageParams
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Model'
        messages:
          title: Messages
          description: |-
            Input messages.

            Our models are trained to operate on alternating `user` and `assistant` conversational turns. When creating a new `Message`, you specify the prior conversational turns with the `messages` parameter, and the model then generates the next `Message` in the conversation. Consecutive `user` or `assistant` turns in your request will be combined into a single turn.

            Each input message must be an object with a `role` and `content`. You can specify a single `user`-role message, or you can include multiple `user` and `assistant` messages.

            If the final message uses the `assistant` role, the response content will continue immediately from the content in that message. This can be used to constrain part of the model's response.

            Example with a single `user` message:

            ```json
            [{"role": "user", "content": "Hello, Claude"}]
            ```

            Example with multiple conversational turns:

            ```json
            [
              {"role": "user", "content": "Hello there."},
              {"role": "assistant", "content": "Hi, I'm Claude. How can I help you?"},
              {"role": "user", "content": "Can you explain LLMs in plain English?"},
            ]
            ```

            Example with a partially-filled response from Claude:

            ```json
            [
              {"role": "user", "content": "What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun"},
              {"role": "assistant", "content": "The best answer is ("},
            ]
            ```

            Each input message `content` may be either a single `string` or an array of content blocks, where each block has a specific `type`. Using a `string` for `content` is shorthand for an array of one content block of type `"text"`. The following input messages are equivalent:

            ```json
            {"role": "user", "content": "Hello, Claude"}
            ```

            ```json
            {"role": "user", "content": [{"type": "text", "text": "Hello, Claude"}]}
            ```

            Starting with Claude 3 models, you can also send image content blocks:

            ```json
            {"role": "user", "content": [
              {
                "type": "image",
                "source": {
                  "type": "base64",
                  "media_type": "image/jpeg",
                  "data": "/9j/4AAQSkZJRg...",
                }
              },
              {"type": "text", "text": "What is in this image?"}
            ]}
            ```

            We currently support the `base64` source type for images, and the `image/jpeg`, `image/png`, `image/gif`, and `image/webp` media types.

            See [examples](https://docs.anthropic.com/en/api/messages-examples#vision) for more input examples.

            Note that if you want to include a [system prompt](https://docs.anthropic.com/en/docs/system-prompts), you can use the top-level `system` parameter â€” there is no `"system"` role for input messages in the Messages API.

            There is a limit of 100000 messages in a single request.
          type: array
          items:
            $ref: '#/components/schemas/InputMessage'
        max_tokens:
          title: Max Tokens
          description: |-
            The maximum number of tokens to generate before stopping.

            Note that our models may stop _before_ reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.

            Different models have different maximum values for this parameter.  See [models](https://docs.anthropic.com/en/docs/models-overview) for details.
          type: integer
          minimum: 1
        metadata:
          description: An object describing metadata about the request.
          allOf:
          - $ref: '#/components/schemas/Metadata'
        stop_sequences:
          title: Stop Sequences
          description: |-
            Custom text sequences that will cause the model to stop generating.

            Our models will normally stop when they have naturally completed their turn, which will result in a response `stop_reason` of `"end_turn"`.

            If you want the model to stop generating when it encounters custom strings of text, you can use the `stop_sequences` parameter. If the model encounters one of the custom sequences, the response `stop_reason` value will be `"stop_sequence"` and the response `stop_sequence` value will contain the matched stop sequence.
          type: array
          items:
            type: string
        stream:
          title: Stream
          description: |-
            Whether to incrementally stream the response using server-sent events.

            See [streaming](https://docs.anthropic.com/en/api/messages-streaming) for details.
          type: boolean
        system:
          title: System
          description: |-
            System prompt.

            A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role. See our [guide to system prompts](https://docs.anthropic.com/en/docs/system-prompts).
          anyOf:
          - x-stainless-skip:
            - go
            - cli
            type: string
          - type: array
            items:
              $ref: '#/components/schemas/RequestTextBlock'
        temperature:
          title: Temperature
          description: |-
            Amount of randomness injected into the response.

            Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use `temperature` closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks.

            Note that even with `temperature` of `0.0`, the results will not be fully deterministic.
          type: number
          minimum: 0.0
          maximum: 1.0
        thinking:
          $ref: '#/components/schemas/ThinkingConfigParam'
        tool_choice:
          $ref: '#/components/schemas/ToolChoice'
        tools:
          title: Tools
          description: |-
            Definitions of tools that the model may use.

            If you include `tools` in your API request, the model may return `tool_use` content blocks that represent the model's use of those tools. You can then run those tools using the tool input generated by the model and then optionally return results back to the model using `tool_result` content blocks.

            Each tool definition includes:

            * `name`: Name of the tool.
            * `description`: Optional, but strongly-recommended description of the tool.
            * `input_schema`: [JSON schema](https://json-schema.org/draft/2020-12) for the tool `input` shape that the model will produce in `tool_use` output content blocks.

            For example, if you defined `tools` as:

            ```json
            [
              {
                "name": "get_stock_price",
                "description": "Get the current stock price for a given ticker symbol.",
                "input_schema": {
                  "type": "object",
                  "properties": {
                    "ticker": {
                      "type": "string",
                      "description": "The stock ticker symbol, e.g. AAPL for Apple Inc."
                    }
                  },
                  "required": ["ticker"]
                }
              }
            ]
            ```

            And then asked the model "What's the S&P 500 at today?", the model might produce `tool_use` content blocks in the response like this:

            ```json
            [
              {
                "type": "tool_use",
                "id": "toolu_01D7FLrfh4GYq7yT1ULFeyMV",
                "name": "get_stock_price",
                "input": { "ticker": "^GSPC" }
              }
            ]
            ```

            You might then run your `get_stock_price` tool with `{"ticker": "^GSPC"}` as an input, and return the following back to the model in a subsequent `user` message:

            ```json
            [
              {
                "type": "tool_result",
                "tool_use_id": "toolu_01D7FLrfh4GYq7yT1ULFeyMV",
                "content": "259.75 USD"
              }
            ]
            ```

            Tools can be used for workflows that include running client-side tools and functions, or more generally whenever you want the model to produce a particular JSON structure of output.

            See our [guide](https://docs.anthropic.com/en/docs/tool-use) for more details.
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/Tool'
            - $ref: '#/components/schemas/BashTool_20250124'
            - $ref: '#/components/schemas/TextEditor_20250124'
        top_k:
          title: Top K
          description: |-
            Only sample from the top K options for each subsequent token.

            Used to remove "long tail" low probability responses. [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).

            Recommended for advanced use cases only. You usually only need to use `temperature`.
          type: integer
          minimum: 0
        top_p:
          title: Top P
          description: |-
            Use nucleus sampling.

            In nucleus sampling, we compute the cumulative distribution over all the options for each subsequent token in decreasing probability order and cut it off once it reaches a particular probability specified by `top_p`. You should either alter `temperature` or `top_p`, but not both.

            Recommended for advanced use cases only. You usually only need to use `temperature`.
          type: number
          minimum: 0.0
          maximum: 1.0
      required:
      - model
      - messages
      - max_tokens
      additionalProperties: false
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        error:
          title: Error
          discriminator:
            propertyName: type
            mapping:
              api_error: '#/components/schemas/APIError'
              authentication_error: '#/components/schemas/AuthenticationError'
              billing_error: '#/components/schemas/BillingError'
              invalid_request_error: '#/components/schemas/InvalidRequestError'
              not_found_error: '#/components/schemas/NotFoundError'
              overloaded_error: '#/components/schemas/OverloadedError'
              permission_error: '#/components/schemas/PermissionError'
              rate_limit_error: '#/components/schemas/RateLimitError'
              timeout_error: '#/components/schemas/GatewayTimeoutError'
          oneOf:
          - $ref: '#/components/schemas/InvalidRequestError'
          - $ref: '#/components/schemas/AuthenticationError'
          - $ref: '#/components/schemas/BillingError'
          - $ref: '#/components/schemas/PermissionError'
          - $ref: '#/components/schemas/NotFoundError'
          - $ref: '#/components/schemas/RateLimitError'
          - $ref: '#/components/schemas/GatewayTimeoutError'
          - $ref: '#/components/schemas/APIError'
          - $ref: '#/components/schemas/OverloadedError'
        type:
          title: Type
          default: error
          type: string
          enum:
          - error
      required:
      - error
      - type
    GatewayTimeoutError:
      title: GatewayTimeoutError
      type: object
      properties:
        message:
          title: Message
          default: Request timeout
          type: string
        type:
          title: Type
          default: timeout_error
          type: string
          enum:
          - timeout_error
      required:
      - message
      - type
    InputMessage:
      title: InputMessage
      discriminator:
        propertyName: role
      type: object
      properties:
        content:
          title: Content
          anyOf:
          - x-stainless-skip:
            - go
            - cli
            type: string
          - example:
            - text: What is a quaternion?
              type: text
            type: array
            items:
              $ref: '#/components/schemas/InputContentBlock'
        role:
          title: Role
          type: string
          enum:
          - user
          - assistant
      required:
      - content
      - role
      additionalProperties: false
    InputSchema:
      title: InputSchema
      type: object
      properties:
        properties:
          title: Properties
          anyOf:
          - type: object
          - type: 'null'
        type:
          title: Type
          type: string
          enum:
          - object
      required:
      - type
      additionalProperties: true
    InvalidRequestError:
      title: InvalidRequestError
      type: object
      properties:
        message:
          title: Message
          default: Invalid request
          type: string
        type:
          title: Type
          default: invalid_request_error
          type: string
          enum:
          - invalid_request_error
      required:
      - message
      - type
    Message:
      title: Message
      x-stainless-python-custom-imports:
      - from .content_block import ContentBlock as ContentBlock
      type: object
      properties:
        id:
          title: Id
          description: |-
            Unique object identifier.

            The format and length of IDs may change over time.
          type: string
        type:
          title: Type
          description: |-
            Object type.

            For Messages, this is always `"message"`.
          default: message
          type: string
          enum:
          - message
        role:
          title: Role
          description: |-
            Conversational role of the generated message.

            This will always be `"assistant"`.
          default: assistant
          type: string
          enum:
          - assistant
        content:
          title: Content
          description: |-
            Content generated by the model.

            This is an array of content blocks, each of which has a `type` that determines its shape.

            Example:

            ```json
            [{"type": "text", "text": "Hi, I'm Claude."}]
            ```

            If the request input `messages` ended with an `assistant` turn, then the response `content` will continue directly from that last turn. You can use this to constrain the model's output.

            For example, if the input `messages` were:
            ```json
            [
              {"role": "user", "content": "What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun"},
              {"role": "assistant", "content": "The best answer is ("}
            ]
            ```

            Then the response `content` might be:

            ```json
            [{"type": "text", "text": "B)"}]
            ```
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
        model:
          $ref: '#/components/schemas/Model'
        stop_reason:
          title: Stop Reason
          description: |-
            The reason that we stopped.

            This may be one the following values:
            * `"end_turn"`: the model reached a natural stopping point
            * `"max_tokens"`: we exceeded the requested `max_tokens` or the model's maximum
            * `"stop_sequence"`: one of your provided custom `stop_sequences` was generated
            * `"tool_use"`: the model invoked one or more tools

            In non-streaming mode this value is always non-null. In streaming mode, it is null in the `message_start` event and non-null otherwise.
          anyOf:
          - $ref: '#/components/schemas/StopReason'
          - type: 'null'
        stop_sequence:
          title: Stop Sequence
          description: |-
            Which custom stop sequence was generated, if any.

            This value will be a non-null string if one of your custom stop sequences was generated.
          anyOf:
          - type: string
          - type: 'null'
        usage:
          description: |-
            Billing and rate-limit usage.

            Anthropic's API bills and rate-limits by token counts, as tokens represent the underlying cost to our systems.

            Under the hood, the API transforms requests into a format suitable for the model. The model's output then goes through a parsing stage before becoming an API response. As a result, the token counts in `usage` will not match one-to-one with the exact visible content of an API request or response.

            For example, `output_tokens` will be non-zero, even for an empty string response from Claude.

            Total input tokens in a request is the summation of `input_tokens`, `cache_creation_input_tokens`, and `cache_read_input_tokens`.
          allOf:
          - $ref: '#/components/schemas/Usage'
      required:
      - id
      - type
      - role
      - content
      - model
      - stop_reason
      - stop_sequence
      - usage
    Metadata:
      title: Metadata
      type: object
      properties:
        user_id:
          title: User Id
          description: |-
            An external identifier for the user who is associated with the request.

            This should be a uuid, hash value, or other opaque identifier. Anthropic may use this id to help detect abuse. Do not include any identifying information such as name, email address, or phone number.
          anyOf:
          - type: string
            maxLength: 256
          - type: 'null'
      additionalProperties: false
    NotFoundError:
      title: NotFoundError
      type: object
      properties:
        message:
          title: Message
          default: Not found
          type: string
        type:
          title: Type
          default: not_found_error
          type: string
          enum:
          - not_found_error
      required:
      - message
      - type
    OverloadedError:
      title: OverloadedError
      type: object
      properties:
        message:
          title: Message
          default: Overloaded
          type: string
        type:
          title: Type
          default: overloaded_error
          type: string
          enum:
          - overloaded_error
      required:
      - message
      - type
    PermissionError:
      title: PermissionError
      type: object
      properties:
        message:
          title: Message
          default: Permission denied
          type: string
        type:
          title: Type
          default: permission_error
          type: string
          enum:
          - permission_error
      required:
      - message
      - type
    PlainTextSource:
      title: PlainTextSource
      type: object
      properties:
        data:
          title: Data
          type: string
        media_type:
          title: Media Type
          type: string
          enum:
          - text/plain
        type:
          title: Type
          type: string
          enum:
          - text
      required:
      - data
      - media_type
      - type
      additionalProperties: false
    RateLimitError:
      title: RateLimitError
      type: object
      properties:
        message:
          title: Message
          default: Rate limited
          type: string
        type:
          title: Type
          default: rate_limit_error
          type: string
          enum:
          - rate_limit_error
      required:
      - message
      - type
    RequestCharLocationCitation:
      title: RequestCharLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        document_index:
          title: Document Index
          type: integer
          minimum: 0
        document_title:
          title: Document Title
          anyOf:
          - type: string
            minLength: 1
            maxLength: 255
          - type: 'null'
        end_char_index:
          title: End Char Index
          type: integer
        start_char_index:
          title: Start Char Index
          type: integer
          minimum: 0
        type:
          title: Type
          type: string
          enum:
          - char_location
      required:
      - cited_text
      - document_index
      - document_title
      - end_char_index
      - start_char_index
      - type
      additionalProperties: false
    RequestCitationsConfig:
      title: RequestCitationsConfig
      type: object
      properties:
        enabled:
          title: Enabled
          type: boolean
      additionalProperties: false
    RequestContentBlockLocationCitation:
      title: RequestContentBlockLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        document_index:
          title: Document Index
          type: integer
          minimum: 0
        document_title:
          title: Document Title
          anyOf:
          - type: string
            minLength: 1
            maxLength: 255
          - type: 'null'
        end_block_index:
          title: End Block Index
          type: integer
        start_block_index:
          title: Start Block Index
          type: integer
          minimum: 0
        type:
          title: Type
          type: string
          enum:
          - content_block_location
      required:
      - cited_text
      - document_index
      - document_title
      - end_block_index
      - start_block_index
      - type
      additionalProperties: false
    RequestDocumentBlock:
      title: RequestDocumentBlock
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        citations:
          $ref: '#/components/schemas/RequestCitationsConfig'
        context:
          title: Context
          anyOf:
          - type: string
            minLength: 1
          - type: 'null'
        source:
          title: Source
          discriminator:
            propertyName: type
            mapping:
              base64: '#/components/schemas/Base64PDFSource'
              content: '#/components/schemas/ContentBlockSource'
              text: '#/components/schemas/PlainTextSource'
              url: '#/components/schemas/URLPDFSource'
          oneOf:
          - $ref: '#/components/schemas/Base64PDFSource'
          - $ref: '#/components/schemas/PlainTextSource'
          - $ref: '#/components/schemas/ContentBlockSource'
          - $ref: '#/components/schemas/URLPDFSource'
        title:
          title: Title
          anyOf:
          - type: string
            minLength: 1
            maxLength: 500
          - type: 'null'
        type:
          title: Type
          type: string
          enum:
          - document
      required:
      - source
      - type
      additionalProperties: false
    RequestImageBlock:
      title: RequestImageBlock
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        source:
          title: Source
          discriminator:
            propertyName: type
            mapping:
              base64: '#/components/schemas/Base64ImageSource'
              url: '#/components/schemas/URLImageSource'
          oneOf:
          - $ref: '#/components/schemas/Base64ImageSource'
          - $ref: '#/components/schemas/URLImageSource'
        type:
          title: Type
          type: string
          enum:
          - image
      required:
      - source
      - type
      additionalProperties: false
    RequestPageLocationCitation:
      title: RequestPageLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        document_index:
          title: Document Index
          type: integer
          minimum: 0
        document_title:
          title: Document Title
          anyOf:
          - type: string
            minLength: 1
            maxLength: 255
          - type: 'null'
        end_page_number:
          title: End Page Number
          type: integer
        start_page_number:
          title: Start Page Number
          type: integer
          minimum: 1
        type:
          title: Type
          type: string
          enum:
          - page_location
      required:
      - cited_text
      - document_index
      - document_title
      - end_page_number
      - start_page_number
      - type
      additionalProperties: false
    RequestRedactedThinkingBlock:
      title: RequestRedactedThinkingBlock
      type: object
      properties:
        data:
          title: Data
          type: string
        type:
          title: Type
          type: string
          enum:
          - redacted_thinking
      required:
      - data
      - type
      additionalProperties: false
    RequestServerToolUseBlock:
      title: RequestServerToolUseBlock
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        id:
          title: Id
          type: string
          pattern: ^srvtoolu_[a-zA-Z0-9_]+$
        input:
          title: Input
          type: object
        name:
          title: Name
          type: string
          enum:
          - web_search
        type:
          title: Type
          type: string
          enum:
          - server_tool_use
      required:
      - id
      - input
      - name
      - type
      additionalProperties: false
    RequestTextBlock:
      title: RequestTextBlock
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        citations:
          title: Citations
          anyOf:
          - type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  char_location: '#/components/schemas/RequestCharLocationCitation'
                  content_block_location: '#/components/schemas/RequestContentBlockLocationCitation'
                  page_location: '#/components/schemas/RequestPageLocationCitation'
                  web_search_result_location: '#/components/schemas/RequestWebSearchResultLocationCitation'
              oneOf:
              - $ref: '#/components/schemas/RequestCharLocationCitation'
              - $ref: '#/components/schemas/RequestPageLocationCitation'
              - $ref: '#/components/schemas/RequestContentBlockLocationCitation'
              - $ref: '#/components/schemas/RequestWebSearchResultLocationCitation'
          - type: 'null'
        text:
          title: Text
          type: string
          minLength: 1
        type:
          title: Type
          type: string
          enum:
          - text
      required:
      - text
      - type
      additionalProperties: false
    RequestThinkingBlock:
      title: RequestThinkingBlock
      type: object
      properties:
        signature:
          title: Signature
          type: string
        thinking:
          title: Thinking
          type: string
        type:
          title: Type
          type: string
          enum:
          - thinking
      required:
      - signature
      - thinking
      - type
      additionalProperties: false
    RequestToolResultBlock:
      title: RequestToolResultBlock
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        content:
          title: Content
          anyOf:
          - x-stainless-skip:
            - go
            - cli
            type: string
          - x-stainless-naming:
              python:
                type_name: Content
              ruby:
                type_name: Content
            type: array
            items:
              title: Block
              discriminator:
                propertyName: type
                mapping:
                  image: '#/components/schemas/RequestImageBlock'
                  text: '#/components/schemas/RequestTextBlock'
              oneOf:
              - $ref: '#/components/schemas/RequestTextBlock'
              - $ref: '#/components/schemas/RequestImageBlock'
        is_error:
          title: Is Error
          type: boolean
        tool_use_id:
          title: Tool Use Id
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
        type:
          title: Type
          type: string
          enum:
          - tool_result
      required:
      - tool_use_id
      - type
      additionalProperties: false
    RequestToolUseBlock:
      title: RequestToolUseBlock
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        id:
          title: Id
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
        input:
          title: Input
          type: object
        name:
          title: Name
          type: string
          minLength: 1
          maxLength: 200
        type:
          title: Type
          type: string
          enum:
          - tool_use
      required:
      - id
      - input
      - name
      - type
      additionalProperties: false
    RequestWebSearchResultBlock:
      title: RequestWebSearchResultBlock
      type: object
      properties:
        encrypted_content:
          title: Encrypted Content
          type: string
        page_age:
          title: Page Age
          anyOf:
          - type: string
          - type: 'null'
        title:
          title: Title
          type: string
          minLength: 1
        type:
          title: Type
          type: string
          enum:
          - web_search_result
        url:
          title: Url
          type: string
          minLength: 1
      required:
      - encrypted_content
      - title
      - type
      - url
      additionalProperties: false
    RequestWebSearchResultLocationCitation:
      title: RequestWebSearchResultLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        encrypted_index:
          title: Encrypted Index
          type: string
        title:
          title: Title
          anyOf:
          - type: string
            minLength: 1
            maxLength: 255
          - type: 'null'
        type:
          title: Type
          type: string
          enum:
          - web_search_result_location
        url:
          title: Url
          type: string
          minLength: 1
          maxLength: 2048
      required:
      - cited_text
      - encrypted_index
      - title
      - type
      - url
      additionalProperties: false
    RequestWebSearchToolResultBlock:
      title: RequestWebSearchToolResultBlock
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        content:
          title: Content
          anyOf:
          - title: web_search_tool_result_block_item
            type: array
            items:
              $ref: '#/components/schemas/RequestWebSearchResultBlock'
          - $ref: '#/components/schemas/RequestWebSearchToolResultError'
        tool_use_id:
          title: Tool Use Id
          type: string
          pattern: ^srvtoolu_[a-zA-Z0-9_]+$
        type:
          title: Type
          type: string
          enum:
          - web_search_tool_result
      required:
      - content
      - tool_use_id
      - type
      additionalProperties: false
    RequestWebSearchToolResultError:
      title: RequestWebSearchToolResultError
      type: object
      properties:
        error_code:
          $ref: '#/components/schemas/WebSearchToolResultErrorCode'
        type:
          title: Type
          type: string
          enum:
          - web_search_tool_result_error
      required:
      - error_code
      - type
      additionalProperties: false
    ResponseCharLocationCitation:
      title: ResponseCharLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        document_index:
          title: Document Index
          type: integer
          minimum: 0
        document_title:
          title: Document Title
          anyOf:
          - type: string
          - type: 'null'
        end_char_index:
          title: End Char Index
          type: integer
        start_char_index:
          title: Start Char Index
          type: integer
          minimum: 0
        type:
          title: Type
          default: char_location
          type: string
          enum:
          - char_location
      required:
      - cited_text
      - document_index
      - document_title
      - end_char_index
      - start_char_index
      - type
    ResponseContentBlockLocationCitation:
      title: ResponseContentBlockLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        document_index:
          title: Document Index
          type: integer
          minimum: 0
        document_title:
          title: Document Title
          anyOf:
          - type: string
          - type: 'null'
        end_block_index:
          title: End Block Index
          type: integer
        start_block_index:
          title: Start Block Index
          type: integer
          minimum: 0
        type:
          title: Type
          default: content_block_location
          type: string
          enum:
          - content_block_location
      required:
      - cited_text
      - document_index
      - document_title
      - end_block_index
      - start_block_index
      - type
    ResponsePageLocationCitation:
      title: ResponsePageLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        document_index:
          title: Document Index
          type: integer
          minimum: 0
        document_title:
          title: Document Title
          anyOf:
          - type: string
          - type: 'null'
        end_page_number:
          title: End Page Number
          type: integer
        start_page_number:
          title: Start Page Number
          type: integer
          minimum: 1
        type:
          title: Type
          default: page_location
          type: string
          enum:
          - page_location
      required:
      - cited_text
      - document_index
      - document_title
      - end_page_number
      - start_page_number
      - type
    ResponseRedactedThinkingBlock:
      title: ResponseRedactedThinkingBlock
      type: object
      properties:
        data:
          title: Data
          type: string
        type:
          title: Type
          default: redacted_thinking
          type: string
          enum:
          - redacted_thinking
      required:
      - data
      - type
    ResponseServerToolUseBlock:
      title: ResponseServerToolUseBlock
      type: object
      properties:
        id:
          title: Id
          type: string
          pattern: ^srvtoolu_[a-zA-Z0-9_]+$
        input:
          title: Input
          type: object
        name:
          title: Name
          type: string
          enum:
          - web_search
        type:
          title: Type
          default: server_tool_use
          type: string
          enum:
          - server_tool_use
      required:
      - id
      - input
      - name
      - type
    ResponseTextBlock:
      title: ResponseTextBlock
      type: object
      properties:
        citations:
          title: Citations
          description: |-
            Citations supporting the text block.

            The type of citation returned will depend on the type of document being cited. Citing a PDF results in `page_location`, plain text results in `char_location`, and content document results in `content_block_location`.
          anyOf:
          - type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  char_location: '#/components/schemas/ResponseCharLocationCitation'
                  content_block_location: '#/components/schemas/ResponseContentBlockLocationCitation'
                  page_location: '#/components/schemas/ResponsePageLocationCitation'
                  web_search_result_location: '#/components/schemas/ResponseWebSearchResultLocationCitation'
              oneOf:
              - $ref: '#/components/schemas/ResponseCharLocationCitation'
              - $ref: '#/components/schemas/ResponsePageLocationCitation'
              - $ref: '#/components/schemas/ResponseContentBlockLocationCitation'
              - $ref: '#/components/schemas/ResponseWebSearchResultLocationCitation'
          - type: 'null'
        text:
          title: Text
          type: string
          minLength: 0
          maxLength: 5000000
        type:
          title: Type
          default: text
          type: string
          enum:
          - text
      required:
      - citations
      - text
      - type
    ResponseThinkingBlock:
      title: ResponseThinkingBlock
      type: object
      properties:
        signature:
          title: Signature
          type: string
        thinking:
          title: Thinking
          type: string
        type:
          title: Type
          default: thinking
          type: string
          enum:
          - thinking
      required:
      - signature
      - thinking
      - type
    ResponseToolUseBlock:
      title: ResponseToolUseBlock
      type: object
      properties:
        id:
          title: Id
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
        input:
          title: Input
          type: object
        name:
          title: Name
          type: string
          minLength: 1
        type:
          title: Type
          default: tool_use
          type: string
          enum:
          - tool_use
      required:
      - id
      - input
      - name
      - type
    ResponseWebSearchResultBlock:
      title: ResponseWebSearchResultBlock
      type: object
      properties:
        encrypted_content:
          title: Encrypted Content
          type: string
        page_age:
          title: Page Age
          anyOf:
          - type: string
          - type: 'null'
        title:
          title: Title
          type: string
        type:
          title: Type
          default: web_search_result
          type: string
          enum:
          - web_search_result
        url:
          title: Url
          type: string
      required:
      - encrypted_content
      - page_age
      - title
      - type
      - url
    ResponseWebSearchResultLocationCitation:
      title: ResponseWebSearchResultLocationCitation
      type: object
      properties:
        cited_text:
          title: Cited Text
          type: string
        encrypted_index:
          title: Encrypted Index
          type: string
        title:
          title: Title
          anyOf:
          - type: string
          - type: 'null'
        type:
          title: Type
          default: web_search_result_location
          type: string
          enum:
          - web_search_result_location
        url:
          title: Url
          type: string
      required:
      - cited_text
      - encrypted_index
      - title
      - type
      - url
    ResponseWebSearchToolResultBlock:
      title: ResponseWebSearchToolResultBlock
      type: object
      properties:
        content:
          title: Content
          anyOf:
          - $ref: '#/components/schemas/ResponseWebSearchToolResultError'
          - type: array
            items:
              $ref: '#/components/schemas/ResponseWebSearchResultBlock'
        tool_use_id:
          title: Tool Use Id
          type: string
          pattern: ^srvtoolu_[a-zA-Z0-9_]+$
        type:
          title: Type
          default: web_search_tool_result
          type: string
          enum:
          - web_search_tool_result
      required:
      - content
      - tool_use_id
      - type
    ResponseWebSearchToolResultError:
      title: ResponseWebSearchToolResultError
      type: object
      properties:
        error_code:
          $ref: '#/components/schemas/WebSearchToolResultErrorCode'
        type:
          title: Type
          default: web_search_tool_result_error
          type: string
          enum:
          - web_search_tool_result_error
      required:
      - error_code
      - type
    ServerToolUsage:
      title: ServerToolUsage
      type: object
      properties:
        web_search_requests:
          title: Web Search Requests
          description: The number of web search tool requests.
          default: 0
          type: integer
          minimum: 0
      required:
      - web_search_requests
    TextEditor_20250124:
      title: TextEditor_20250124
      type: object
      properties:
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
        name:
          title: Name
          description: |-
            Name of the tool.

            This is how the tool will be called by the model and in `tool_use` blocks.
          type: string
          enum:
          - str_replace_editor
        type:
          title: Type
          type: string
          enum:
          - text_editor_20250124
      required:
      - name
      - type
      additionalProperties: false
    ThinkingConfigDisabled:
      title: ThinkingConfigDisabled
      type: object
      properties:
        type:
          title: Type
          type: string
          enum:
          - disabled
      required:
      - type
      additionalProperties: false
    ThinkingConfigEnabled:
      title: ThinkingConfigEnabled
      type: object
      properties:
        budget_tokens:
          title: Budget Tokens
          description: "Determines how many tokens Claude can use for its internal reasoning process. Larger budgets can enable more thorough analysis for complex problems, improving response quality. \n\nMust be â‰¥1024 and less than `max_tokens`.\n\nSee [extended thinking](https://docs.anthropic.com/en/docs/build-with-claude/extended-thinking) for details."
          type: integer
          minimum: 1024
        type:
          title: Type
          type: string
          enum:
          - enabled
      required:
      - budget_tokens
      - type
      additionalProperties: false
    Tool:
      title: Tool
      type: object
      properties:
        type:
          title: Type
          anyOf:
          - type: 'null'
          - type: string
            enum:
            - custom
        description:
          title: Description
          description: |-
            Description of what this tool does.

            Tool descriptions should be as detailed as possible. The more information that the model has about what the tool is and how to use it, the better it will perform. You can use natural language descriptions to reinforce important aspects of the tool input JSON schema.
          type: string
        name:
          title: Name
          description: |-
            Name of the tool.

            This is how the tool will be called by the model and in `tool_use` blocks.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,64}$
          minLength: 1
          maxLength: 64
        input_schema:
          description: |-
            [JSON schema](https://json-schema.org/draft/2020-12) for this tool's input.

            This defines the shape of the `input` that your tool accepts and that the model will produce.
          x-stainless-skip:
          - cli
          allOf:
          - $ref: '#/components/schemas/InputSchema'
        cache_control:
          title: Cache Control
          description: Create a cache control breakpoint at this content block.
          anyOf:
          - discriminator:
              propertyName: type
              mapping:
                ephemeral: '#/components/schemas/CacheControlEphemeral'
            oneOf:
            - $ref: '#/components/schemas/CacheControlEphemeral'
          - type: 'null'
      required:
      - name
      - input_schema
      additionalProperties: false
    ToolChoiceAny:
      title: ToolChoiceAny
      description: The model will use any available tools.
      type: object
      properties:
        disable_parallel_tool_use:
          title: Disable Parallel Tool Use
          description: |-
            Whether to disable parallel tool use.

            Defaults to `false`. If set to `true`, the model will output exactly one tool use.
          type: boolean
        type:
          title: Type
          type: string
          enum:
          - any
      required:
      - type
      additionalProperties: false
    ToolChoiceAuto:
      title: ToolChoiceAuto
      description: The model will automatically decide whether to use tools.
      type: object
      properties:
        disable_parallel_tool_use:
          title: Disable Parallel Tool Use
          description: |-
            Whether to disable parallel tool use.

            Defaults to `false`. If set to `true`, the model will output at most one tool use.
          type: boolean
        type:
          title: Type
          type: string
          enum:
          - auto
      required:
      - type
      additionalProperties: false
    ToolChoiceNone:
      title: ToolChoiceNone
      description: The model will not be allowed to use tools.
      type: object
      properties:
        type:
          title: Type
          type: string
          enum:
          - none
      required:
      - type
      additionalProperties: false
    ToolChoiceTool:
      title: ToolChoiceTool
      description: The model will use the specified tool with `tool_choice.name`.
      type: object
      properties:
        disable_parallel_tool_use:
          title: Disable Parallel Tool Use
          description: |-
            Whether to disable parallel tool use.

            Defaults to `false`. If set to `true`, the model will output exactly one tool use.
          type: boolean
        name:
          title: Name
          description: The name of the tool to use.
          type: string
        type:
          title: Type
          type: string
          enum:
          - tool
      required:
      - name
      - type
      additionalProperties: false
    URLImageSource:
      title: URLImageSource
      type: object
      properties:
        type:
          title: Type
          type: string
          enum:
          - url
        url:
          title: Url
          type: string
      required:
      - type
      - url
      additionalProperties: false
    URLPDFSource:
      title: URLPDFSource
      type: object
      properties:
        type:
          title: Type
          type: string
          enum:
          - url
        url:
          title: Url
          type: string
      required:
      - type
      - url
      additionalProperties: false
    Usage:
      title: Usage
      type: object
      properties:
        cache_creation_input_tokens:
          title: Cache Creation Input Tokens
          description: The number of input tokens used to create the cache entry.
          anyOf:
          - type: integer
            minimum: 0
          - type: 'null'
        cache_read_input_tokens:
          title: Cache Read Input Tokens
          description: The number of input tokens read from the cache.
          anyOf:
          - type: integer
            minimum: 0
          - type: 'null'
        input_tokens:
          title: Input Tokens
          description: The number of input tokens which were used.
          type: integer
          minimum: 0
        output_tokens:
          title: Output Tokens
          description: The number of output tokens which were used.
          type: integer
          minimum: 0
        server_tool_use:
          description: The number of server tool requests.
          anyOf:
          - $ref: '#/components/schemas/ServerToolUsage'
          - type: 'null'
      required:
      - cache_creation_input_tokens
      - cache_read_input_tokens
      - input_tokens
      - output_tokens
      - server_tool_use
    WebSearchToolResultErrorCode:
      title: WebSearchToolResultErrorCode
      type: string
      enum:
      - invalid_tool_input
      - unavailable
      - max_uses_exceeded
      - too_many_requests
      - query_too_long
    ThinkingConfigParam:
      title: Thinking
      description: "Configuration for enabling Claude's extended thinking. \n\nWhen enabled, responses include `thinking` content blocks showing Claude's thinking process before the final answer. Requires a minimum budget of 1,024 tokens and counts towards your `max_tokens` limit.\n\nSee [extended thinking](https://docs.anthropic.com/en/docs/build-with-claude/extended-thinking) for details."
      discriminator:
        propertyName: type
        mapping:
          disabled: '#/components/schemas/ThinkingConfigDisabled'
          enabled: '#/components/schemas/ThinkingConfigEnabled'
      oneOf:
      - $ref: '#/components/schemas/ThinkingConfigEnabled'
      - $ref: '#/components/schemas/ThinkingConfigDisabled'
    ToolChoice:
      title: Tool Choice
      description: How the model should use the provided tools. The model can use a specific tool, any available tool, decide by itself, or not use tools at all.
      discriminator:
        propertyName: type
        mapping:
          any: '#/components/schemas/ToolChoiceAny'
          auto: '#/components/schemas/ToolChoiceAuto'
          none: '#/components/schemas/ToolChoiceNone'
          tool: '#/components/schemas/ToolChoiceTool'
      oneOf:
      - $ref: '#/components/schemas/ToolChoiceAuto'
      - $ref: '#/components/schemas/ToolChoiceAny'
      - $ref: '#/components/schemas/ToolChoiceTool'
      - $ref: '#/components/schemas/ToolChoiceNone'
    ContentBlock:
      discriminator:
        propertyName: type
        mapping:
          redacted_thinking: '#/components/schemas/ResponseRedactedThinkingBlock'
          server_tool_use: '#/components/schemas/ResponseServerToolUseBlock'
          text: '#/components/schemas/ResponseTextBlock'
          thinking: '#/components/schemas/ResponseThinkingBlock'
          tool_use: '#/components/schemas/ResponseToolUseBlock'
          web_search_tool_result: '#/components/schemas/ResponseWebSearchToolResultBlock'
      oneOf:
      - $ref: '#/components/schemas/ResponseTextBlock'
      - $ref: '#/components/schemas/ResponseToolUseBlock'
      - $ref: '#/components/schemas/ResponseServerToolUseBlock'
      - $ref: '#/components/schemas/ResponseWebSearchToolResultBlock'
      - $ref: '#/components/schemas/ResponseThinkingBlock'
      - $ref: '#/components/schemas/ResponseRedactedThinkingBlock'
    InputContentBlock:
      discriminator:
        propertyName: type
        mapping:
          document: '#/components/schemas/RequestDocumentBlock'
          image: '#/components/schemas/RequestImageBlock'
          redacted_thinking: '#/components/schemas/RequestRedactedThinkingBlock'
          server_tool_use: '#/components/schemas/RequestServerToolUseBlock'
          text: '#/components/schemas/RequestTextBlock'
          thinking: '#/components/schemas/RequestThinkingBlock'
          tool_result: '#/components/schemas/RequestToolResultBlock'
          tool_use: '#/components/schemas/RequestToolUseBlock'
          web_search_tool_result: '#/components/schemas/RequestWebSearchToolResultBlock'
      x-stainless-python-extend-union:
      - ContentBlock
      x-stainless-python-extend-union-imports:
      - from .content_block import ContentBlock
      oneOf:
      - $ref: '#/components/schemas/RequestTextBlock'
      - $ref: '#/components/schemas/RequestImageBlock'
      - $ref: '#/components/schemas/RequestToolUseBlock'
      - $ref: '#/components/schemas/RequestServerToolUseBlock'
      - $ref: '#/components/schemas/RequestWebSearchToolResultBlock'
      - $ref: '#/components/schemas/RequestToolResultBlock'
      - $ref: '#/components/schemas/RequestDocumentBlock'
      - $ref: '#/components/schemas/RequestThinkingBlock'
      - $ref: '#/components/schemas/RequestRedactedThinkingBlock'
    StopReason:
      type: string
      enum:
      - end_turn
      - max_tokens
      - stop_sequence
      - tool_use
      - pause_turn
      - refusal
    Model:
      title: Model
      description: The model that will complete your prompt.\n\nSee [models](https://docs.anthropic.com/en/docs/models-overview) for additional details and options.
      anyOf:
      - type: string
      - description: Our most intelligent model
        x-stainless-nominal: false
      - description: Our most intelligent model
        x-stainless-nominal: false
      - description: Fastest and most compact model for near-instant responsiveness
        x-stainless-nominal: false
      - description: Our fastest model
        x-stainless-nominal: false
      - description: Our previous most intelligent model
        x-stainless-nominal: false
      - description: Our previous most intelligent model
        x-stainless-nominal: false
      - x-stainless-nominal: false
      - description: Excels at writing and complex tasks
        x-stainless-nominal: false
      - description: Excels at writing and complex tasks
        x-stainless-nominal: false
      - deprecated: true
        description: Balance of speed and intelligence
        x-stainless-deprecation-message: Will reach end-of-life on July 21st, 2025. Please migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.
        x-stainless-nominal: false
      - description: Our previous most fast and cost-effective
        x-stainless-nominal: false
      - deprecated: true
        x-stainless-deprecation-message: Will reach end-of-life on July 21st, 2025. Please migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.
        x-stainless-nominal: false
      - deprecated: true
        x-stainless-deprecation-message: Will reach end-of-life on July 21st, 2025. Please migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.
        x-stainless-nominal: false
